shiny::runApp()
runApp()
#   h1("Hello App"),
#   textInput(
#     inputId = "username",
#     label = h3("Type
runApp()
runApp()
ui <- navbarPage("Main title",
tabPanel("Main tab", h1("Main page")),
tabPanel("tab 1", h1("test tab 1")),
tabPanel("tab 2", h1("test tab 2"))
)
runApp()
runApp()
runApp()
runApp()
runApp()
library(plotly)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggpubr)
source("./scripts/sum_table.R")
plot_one_google <- ggplot(
data = google_table,
aes(fill = count, x = Category, y = count)
) +
ggtitle("Amount of applications per category (Google Play Store)") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = Category, y = count + 1000, label = count),
size = 1.5
)
plot_one_apple <- ggplot(
data = apple_table,
aes(fill = count, x = prime_genre, y = count)
) +
ggtitle("Amount of applications per category (Apple App Store)") +
ylab("Number of applications") +
xlab("Category") +
geom_bar(stat = "identity", width = 0.8) +
theme(
axis.text.x = element_text(
size = 7, angle = 90,
hjust = 1, vjust = 0.5
),
plot.title = element_text(hjust = 0.5)
) +
geom_text(aes(x = prime_genre, y = count + 100, label = count),
size = 2
)
pie_function <- function(data, age_group) {
fig <- plot_ly(data, labels = ~Category, values = ~amount_spent, type = 'pie')
fig <- fig %>% layout(title = paste0("Spending habits of people ", age_group, "+"),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
return(fig)
}
setwd("C:/Users/danel/Desktop/INFO201/finaldeliverable")
runApp('shiny')
runApp('shiny')
source("./scripts/chart_three.R")
runApp('shiny')
runApp('shiny')
runApp('shiny')
setwd("C:/Users/danel/Desktop/INFO201/finaldeliverable/shiny")
runApp()
runApp()
runApp()
runApp()
setwd("C:/Users/danel/Desktop/INFO201/finaldeliverable")
runApp('shiny')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tab_1_options <- sidebarPanel(
selectInput(
"mapvar",
label = "Age Group",
choices = list(
"Ages 4+" = "4",
"Ages 9+" = "9",
"Ages 12+" = "12",
"Ages 17+" = "17"
)
),
checkboxInput('jitter', 'Jitter')
)
runApp()
runApp()
runApp()
runApp()
tab_1_options <- sidebarPanel(
selectInput(
"mapvar",
label = "Age Group",
choices = list(
"Ages 4+" = "4",
"Ages 9+" = "9",
"Ages 12+" = "12",
"Ages 17+" = "17"
)
),
selectInput(
"test",
label = "Appstore Selection",
choices = list(
"Google" = "google",
"Apple" = "apple"
)
)
)
tab_1_main <- mainPanel(
plotlyOutput("pie")
)
tab_1 <-  sidebarLayout(
tab_1_options,
tab_1_main
)
main <- fluidPage(
h1("Hello App"),
textInput(
inputId = "username",
label = h3("Type in your name")
),
textOutput(outputId = "out_message")
)
ui <- navbarPage("INFO 201 Final",
tabPanel("Main table", main),
tabPanel("Pie Chart", tab_1),
tabPanel("tab 2", h1("test tab 2"))
)
library(plotly)
##("./scripts/chart_three.R")
server <- function(input, output) {
output$out_message <- renderText({
msg <- paste0("Hi there, ", input$username, "!")
return(msg)
})
output$pie <- renderPlotly({
test <- pie_function(input$test, input$mapvar)
return(test)
})
}
library(shiny)
source("scripts/chart_three.R")
source("app_server.R")
source("app_ui.R")
shinyApp(ui = ui, server = server)
tab_1_options <- sidebarPanel(
selectInput(
"mapvar",
label = "Age Group",
choices = list(
"Ages 4+" = "4",
"Ages 9+" = "9",
"Ages 12+" = "12",
"Ages 17+" = "17"
)
),
selectInput(
"test",
label = "Appstore Selection",
choices = list(
"Google" = "google",
"Apple" = "apple"
)
)
)
tab_1_main <- mainPanel(
plotlyOutput("pie")
)
tab_1 <-  sidebarLayout(
tab_1_options,
tab_1_main
)
main <- fluidPage(
h1("Hello App"),
textInput(
inputId = "username",
label = h3("Type in your name")
),
textOutput(outputId = "out_message")
)
ui <- navbarPage("INFO 201 Final",
tabPanel("Main table", main),
tabPanel("Pie Chart", tab_1),
tabPanel("tab 2", h1("test tab 2"))
)
library(plotly)
##("./scripts/chart_three.R")
server <- function(input, output) {
output$out_message <- renderText({
msg <- paste0("Hi there, ", input$username, "!")
return(msg)
})
output$pie <- renderPlotly({
test <- pie_function(input$test, input$mapvar)
return(test)
})
}
library(shiny)
source("scripts/chart_three.R")
source("app_server.R")
source("app_ui.R")
shinyApp(ui = ui, server = server)
setwd("~/Desktop/Winter2020/INFO201/finaldeliverable")
setwd("~/Desktop/Winter2020/INFO201/finaldeliverable")
setwd("~/Desktop/Winter2020/INFO201/finaldeliverable")
tab_1_options <- sidebarPanel(
selectInput(
"mapvar",
label = "Age Group",
choices = list(
"Ages 4+" = "4",
"Ages 9+" = "9",
"Ages 12+" = "12",
"Ages 17+" = "17"
)
),
selectInput(
"test",
label = "Appstore Selection",
choices = list(
"Google" = "google",
"Apple" = "apple"
)
)
)
tab_1_main <- mainPanel(
plotlyOutput("pie")
)
tab_1 <-  sidebarLayout(
tab_1_options,
tab_1_main
)
main <- fluidPage(
h1("Hello App"),
textInput(
inputId = "username",
label = h3("Type in your name")
),
textOutput(outputId = "out_message")
)
ui <- navbarPage("INFO 201 Final",
tabPanel("Main table", main),
tabPanel("Pie Chart", tab_1),
tabPanel("tab 2", h1("test tab 2"))
)
library(plotly)
##("./scripts/chart_three.R")
server <- function(input, output) {
output$out_message <- renderText({
msg <- paste0("Hi there, ", input$username, "!")
return(msg)
})
output$pie <- renderPlotly({
test <- pie_function(input$test, input$mapvar)
return(test)
})
}
library(shiny)
source("scripts/chart_three.R")
source("app_server.R")
source("app_ui.R")
shinyApp(ui = ui, server = server)
setwd("C:/Users/danel/Desktop/INFO201 stuff/finaldeliverable")
shiny::runApp()
install.packages("shinythemes")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
read.table()
runApp()
runApp()
runApp()
install.packages("shinythemes")
install.packages("shinythemes")
shiny::runApp()
shiny::runApp()
source("./scripts/app_cleaned.R")
source("./scripts/google_cleaned.R")
library(dplyr)
apple_initial <- read.csv("./data/AppleStore.csv", stringsAsFactors = FALSE)
apple_initial <- read.csv("./data/AppleStore.csv", stringsAsFactors = FALSE)
runApp()
runApp()
runApp()
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
library(ggpubr)
source("./scripts/app_cleaned.R")
source("./scripts/google_cleaned.R")
age_rating_apple <- apple_cleaned %>%
group_by(new_content_rating, Category) %>%
summarise(amount_spent = sum(price, na.rm = TRUE))
apple_rating_4 <- age_rating_apple %>% filter(new_content_rating == "4")
apple_rating_9 <- age_rating_apple %>% filter(new_content_rating == "9")
apple_rating_12 <- age_rating_apple %>% filter(new_content_rating == "12")
age_rating_apple <- apple_cleaned %>%
group_by(new_content_rating, Category) %>%
summarise(amount_spent = sum(price, na.rm = TRUE))
apple_initial <- read.csv("./data/AppleStore.csv", stringsAsFactors = FALSE)
apple_cleaned <- apple_initial %>%
select(c(
size_bytes, price,
rating_count_tot, user_rating,
cont_rating, Category
))
apple_cleaned <- apple_cleaned %>%
mutate(new_content_rating = as.numeric(gsub("[+]", "", cont_rating)))
apple_cleaned <- apple_cleaned %>%
select(-c(cont_rating))
View(apple_cleaned)
as.numeric(apple_cleaned[2])
as.numeric(apple_cleaned[1,1])
IS.numeric(apple_cleaned[1,1])
is.numeric(apple_cleaned[1,1])
is.numeric(apple_cleaned[1,2])
is.numeric(apple_cleaned[2,1])
as.numeric(apple_cleaned[2,1])
as.numeric(apple_cleaned[1,2])
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
library(ggpubr)
source("./scripts/app_cleaned.R")
source("./scripts/google_cleaned.R")
age_rating_apple <- apple_cleaned %>%
group_by(new_content_rating, Category) %>%
summarise(amount_spent = sum(as.numeric(price), na.rm = TRUE))
apple_rating_4 <- age_rating_apple %>% filter(new_content_rating == "4")
apple_rating_9 <- age_rating_apple %>% filter(new_content_rating == "9")
apple_rating_12 <- age_rating_apple %>% filter(new_content_rating == "12")
apple_rating_17 <- age_rating_apple %>% filter(new_content_rating == "17")
View(apple_rating_17)
age_rating_google <- google_cleaned %>%
group_by(new_content, Category) %>%
summarise(amount_spent = sum(price, na.rm = TRUE))
google_rating_4 <- age_rating_google %>% filter(new_content == 4)
google_rating_9 <- age_rating_google %>% filter(new_content == 9)
google_rating_12 <- age_rating_google %>% filter(new_content == 12)
google_rating_17 <- age_rating_google %>% filter(new_content == 17)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
# load libraries
library(plotly)
runApp()
runApp()
# main page content(breif intro and overview)
main <- fluidPage(
tags$div(h1("App Store & Google Play Comparison")),
tags$img(src = "https://i.ibb.co/wSSv8zQ/f95x3MR.png"),
textInput(
inputId = "username",
label = h3("Type in your name")
),
textOutput(outputId = "out_message"),
tags$div(h2("Introduction")),
tags$p(sep = "\n", "As a result of smartphones slowly
becoming a crucial part of modern day society,
the demand for mobile applications has increased
greatly. We have downloaded two different datasets
'Mobile App Store' (collected July 2017) and 'Google
Play Store Apps' (April 2019). These two data sets
contain information regarding apps on the Apple App
Store and Google Play Store such as price, rating,
genre, size, and content rating. We will be analyzing
and comparing the previously mentioned data sets to
determine what makes an app successful on the different
app stores. This data will create useful mobile app
analytics to help developers understand existing strategies
and categories that drive growth and retention of
future app users."),
tags$div(h2("Overview - Questions")),
tags$p(sep = "\n", "What categories of apps are the most downloaded?"),
tags$p("What type of mobile games generate the most revenue?"),
tags$p("What factors determine the overall success of a mobile game?"),
tags$p("What is the association between ratings and reviews vs the
amount of installs?"),
tags$p("What is the relationship between the Content Rating the average
rating, review, revenue and installations?")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
